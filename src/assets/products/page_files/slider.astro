var swiper = new Swiper(".mySwiper", {
  slidesPerView: 1,
  grabCursor: true,
  loop: true,
  pagination: {
    el: ".swiper-pagination",
    clickable: true
  },
  navigation: {
    nextEl: ".swiper-button-next",
    prevEl: ".swiper-button-prev"
  }
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNsaWRlci5hc3RybyJdLCJzb3VyY2VzQ29udGVudCI6WyI8c2VjdGlvbiBjbGFzcz1cImNvbnRhaW5lclwiPlxyXG4gICAgPGRpdiBjbGFzcz1cInRlc3RpbW9uaWFsIG15U3dpcGVyXCI+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJ0ZXN0aS1jb250ZW50IHN3aXBlci13cmFwcGVyXCI+XHJcbiAgICAgICAgPGRpdiBjbGFzcz1cInNsaWRlIHN3aXBlci1zbGlkZVwiPlxyXG4gICAgICAgICAgPGltZyBzcmM9XCJodHRwczovL3RoLmJpbmcuY29tL3RoL2lkL09JUC5JR05mN0d1UWFDcXpfUlBxNXdDa1BnSGFMSD9ycz0xJnBpZD1JbWdEZXRNYWluXCIgYWx0PVwiXCIgY2xhc3M9XCJpbWFnZVwiIC8+XHJcbiAgICAgICAgICA8cD5cclxuICAgICAgICAgICAgTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQuIEFwZXJpYW0sXHJcbiAgICAgICAgICAgIHNhZXBlIHByb3ZpZGVudCBkb2xvcmVtIGEgcXVhZXJhdCBxdW8gZXJyb3IgZmFjZXJlIG5paGlsIGRlbGVuaXRpXHJcbiAgICAgICAgICAgIGVsaWdlbmRpIGlwc3VtIGFkaXBpc2NpLCBmdWdpdCwgYXJjaGl0ZWN0byBhbWV0IGFzcGVyaW9yZXNcclxuICAgICAgICAgICAgZG9sb3JlbXF1ZSBkZXNlcnVudCBldW0gbmVtby5cclxuICAgICAgICAgIDwvcD5cclxuXHJcbiAgICAgICAgICA8aSBjbGFzcz1cImJ4IGJ4cy1xdW90ZS1hbHQtbGVmdCBxdW90ZS1pY29uXCI+PC9pPlxyXG5cclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJkZXRhaWxzXCI+XHJcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibmFtZVwiPk1hcm5pZSBMb3R0ZXI8L3NwYW4+XHJcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiam9iXCI+V2ViIERldmVsb3Blcjwvc3Bhbj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJzbGlkZSBzd2lwZXItc2xpZGVcIj5cclxuICAgICAgICAgIDxpbWcgc3JjPVwiaHR0cHM6Ly90aC5iaW5nLmNvbS90aC9pZC9PSVAudzgwMy1EcXhtRFdveDI1b2I3TVRmd0hhSEc/dz0xMTk0Jmg9MTE0NCZycz0xJnBpZD1JbWdEZXRNYWluXCIgYWx0PVwiXCIgY2xhc3M9XCJpbWFnZVwiIC8+XHJcbiAgICAgICAgICA8cD5cclxuICAgICAgICAgICAgTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQuIEFwZXJpYW0sXHJcbiAgICAgICAgICAgIHNhZXBlIHByb3ZpZGVudCBkb2xvcmVtIGEgcXVhZXJhdCBxdW8gZXJyb3IgZmFjZXJlIG5paGlsIGRlbGVuaXRpXHJcbiAgICAgICAgICAgIGVsaWdlbmRpIGlwc3VtIGFkaXBpc2NpLCBmdWdpdCwgYXJjaGl0ZWN0byBhbWV0IGFzcGVyaW9yZXNcclxuICAgICAgICAgICAgZG9sb3JlbXF1ZSBkZXNlcnVudCBldW0gbmVtby5cclxuICAgICAgICAgIDwvcD5cclxuXHJcbiAgICAgICAgICA8aSBjbGFzcz1cImJ4IGJ4cy1xdW90ZS1hbHQtbGVmdCBxdW90ZS1pY29uXCI+PC9pPlxyXG5cclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJkZXRhaWxzXCI+XHJcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibmFtZVwiPk1hcm5pZSBMb3R0ZXI8L3NwYW4+XHJcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiam9iXCI+V2ViIERldmVsb3Blcjwvc3Bhbj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDxkaXYgY2xhc3M9XCJzbGlkZSBzd2lwZXItc2xpZGVcIj5cclxuICAgICAgICAgIDxpbWcgc3JjPVwiaHR0cHM6Ly93cml0ZXN0eWxlc29ubGluZS5jb20vd3AtY29udGVudC91cGxvYWRzLzIwMTYvMDgvRm9sbG93LVRoZXNlLVN0ZXBzLWZvci1hLUZsYXdsZXNzLVByb2Zlc3Npb25hbC1Qcm9maWxlLVBpY3R1cmUuanBnXCIgYWx0PVwiXCIgY2xhc3M9XCJpbWFnZVwiIC8+XHJcbiAgICAgICAgICA8cD5cclxuICAgICAgICAgICAgTG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQsIGNvbnNlY3RldHVyIGFkaXBpc2ljaW5nIGVsaXQuIEFwZXJpYW0sXHJcbiAgICAgICAgICAgIHNhZXBlIHByb3ZpZGVudCBkb2xvcmVtIGEgcXVhZXJhdCBxdW8gZXJyb3IgZmFjZXJlIG5paGlsIGRlbGVuaXRpXHJcbiAgICAgICAgICAgIGVsaWdlbmRpIGlwc3VtIGFkaXBpc2NpLCBmdWdpdCwgYXJjaGl0ZWN0byBhbWV0IGFzcGVyaW9yZXNcclxuICAgICAgICAgICAgZG9sb3JlbXF1ZSBkZXNlcnVudCBldW0gbmVtby5cclxuICAgICAgICAgIDwvcD5cclxuXHJcbiAgICAgICAgICA8aSBjbGFzcz1cImJ4IGJ4cy1xdW90ZS1hbHQtbGVmdCBxdW90ZS1pY29uXCI+PC9pPlxyXG5cclxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJkZXRhaWxzXCI+XHJcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwibmFtZVwiPk1hcm5pZSBMb3R0ZXI8L3NwYW4+XHJcbiAgICAgICAgICAgIDxzcGFuIGNsYXNzPVwiam9iXCI+V2ViIERldmVsb3Blcjwvc3Bhbj5cclxuICAgICAgICAgIDwvZGl2PlxyXG4gICAgICAgIDwvZGl2PlxyXG4gICAgICA8L2Rpdj5cclxuICAgICAgPGRpdiBjbGFzcz1cInN3aXBlci1idXR0b24tbmV4dCBuYXYtYnRuXCI+PC9kaXY+XHJcbiAgICAgIDxkaXYgY2xhc3M9XCJzd2lwZXItYnV0dG9uLXByZXYgbmF2LWJ0blwiPjwvZGl2PlxyXG4gICAgICA8ZGl2IGNsYXNzPVwic3dpcGVyLXBhZ2luYXRpb25cIj48L2Rpdj5cclxuICAgIDwvZGl2PlxyXG4gIDwvc2VjdGlvbj5cclxuICBcclxuICA8bGluayByZWw9XCJzdHlsZXNoZWV0XCIgaHJlZj1cImh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9ucG0vc3dpcGVyQDgvc3dpcGVyLWJ1bmRsZS5taW4uY3NzXCIgLz5cclxuICA8c2NyaXB0IGlzOmlubGluZSBzcmM9XCJodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL3N3aXBlckA4L3N3aXBlci1idW5kbGUubWluLmpzXCI+PC9zY3JpcHQ+XHJcbiAgPHNjcmlwdCBpczppbmxpbmU+bmV3IFN3aXBlcignLnN3aXBlcicpPC9zY3JpcHQ+XHJcblxyXG5cclxuPHN0eWxlPlxyXG4gICAgLyogR29vZ2xlIEZvbnRzIC0gUG9wcGlucyAqL1xyXG5AaW1wb3J0IHVybChcImh0dHBzOi8vZm9udHMuZ29vZ2xlYXBpcy5jb20vY3NzMj9mYW1pbHk9UG9wcGluczp3Z2h0QDMwMDs0MDA7NTAwOzYwMCZkaXNwbGF5PXN3YXBcIik7XHJcblxyXG4qIHtcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZzogMDtcclxuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xyXG4gIGZvbnQtZmFtaWx5OiBcIlBvcHBpbnNcIiwgc2Fucy1zZXJpZjtcclxufVxyXG4uY29udGFpbmVyIHtcclxuICBoZWlnaHQ6IDEwMHZoO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZTNmMmZkO1xyXG59XHJcbi50ZXN0aW1vbmlhbCB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIG1heC13aWR0aDogOTAwcHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgcGFkZGluZzogNTBweCAwO1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbn1cclxuLnRlc3RpbW9uaWFsIC5pbWFnZSB7XHJcbiAgaGVpZ2h0OiAxNzBweDtcclxuICB3aWR0aDogMTcwcHg7XHJcbiAgb2JqZWN0LWZpdDogY292ZXI7XHJcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG59XHJcbi50ZXN0aW1vbmlhbCAuc2xpZGUge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIHJvdy1nYXA6IDMwcHg7XHJcbiAgaGVpZ2h0OiAxMDAlO1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcbi5zbGlkZSBwIHtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgcGFkZGluZzogMCAxNjBweDtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICBjb2xvcjogIzMzMztcclxufVxyXG4uc2xpZGUgLnF1b3RlLWljb24ge1xyXG4gIGZvbnQtc2l6ZTogMzBweDtcclxuICBjb2xvcjogIzQwNzBmNDtcclxufVxyXG4uc2xpZGUgLmRldGFpbHMge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcbi5kZXRhaWxzIC5uYW1lIHtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbiAgZm9udC13ZWlnaHQ6IDYwMDtcclxuICBjb2xvcjogIzMzMztcclxufVxyXG4uZGV0YWlscyAuam9iIHtcclxuICBmb250LXNpemU6IDEycHg7XHJcbiAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICBjb2xvcjogIzMzMztcclxufVxyXG4vKiBzd2lwZXIgYnV0dG9uIGNzcyAqL1xyXG4ubmF2LWJ0biB7XHJcbiAgaGVpZ2h0OiA0MHB4O1xyXG4gIHdpZHRoOiA0MHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMzBweCk7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIHRyYW5zaXRpb246IDAuMnM7XHJcbn1cclxuLm5hdi1idG46aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxufVxyXG4ubmF2LWJ0bjo6YWZ0ZXIsXHJcbi5uYXYtYnRuOjpiZWZvcmUge1xyXG4gIGZvbnQtc2l6ZTogMjBweDtcclxuICBjb2xvcjogI2ZmZjtcclxufVxyXG4uc3dpcGVyLXBhZ2luYXRpb24tYnVsbGV0IHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuOCk7XHJcbn1cclxuLnN3aXBlci1wYWdpbmF0aW9uLWJ1bGxldC1hY3RpdmUge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICM0MDcwZjQ7XHJcbn1cclxuQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAuc2xpZGUgcCB7XHJcbiAgICBwYWRkaW5nOiAwIDIwcHg7XHJcbiAgfVxyXG4gIC5uYXYtYnRuIHtcclxuICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgfVxyXG59XHJcbjwvc3R5bGU+XHJcblxyXG4gIDxzY3JpcHQ+XHJcbiAgIHZhciBzd2lwZXIgPSBuZXcgU3dpcGVyKFwiLm15U3dpcGVyXCIsIHtcclxuICBzbGlkZXNQZXJWaWV3OiAxLFxyXG4gIGdyYWJDdXJzb3I6IHRydWUsXHJcbiAgbG9vcDogdHJ1ZSxcclxuICBwYWdpbmF0aW9uOiB7XHJcbiAgICBlbDogXCIuc3dpcGVyLXBhZ2luYXRpb25cIixcclxuICAgIGNsaWNrYWJsZTogdHJ1ZSxcclxuICB9LFxyXG4gIG5hdmlnYXRpb246IHtcclxuICAgIG5leHRFbDogXCIuc3dpcGVyLWJ1dHRvbi1uZXh0XCIsXHJcbiAgICBwcmV2RWw6IFwiLnN3aXBlci1idXR0b24tcHJldlwiLFxyXG4gIH0sXHJcbn0pO1xyXG5cclxuICA8L3NjcmlwdD4iXSwibWFwcGluZ3MiOiJBQW1LRyxJQUFJLFNBQVMsSUFBSSxPQUFPLGFBQWE7RUFDdEMsZUFBZTtFQUNmLFlBQVk7RUFDWixNQUFNO0VBQ04sWUFBWTtJQUNWLElBQUk7SUFDSixXQUFXO0VBQ2I7RUFDQSxZQUFZO0lBQ1YsUUFBUTtJQUNSLFFBQVE7RUFDVjtBQUNGLENBQUM7IiwibmFtZXMiOltdfQ==